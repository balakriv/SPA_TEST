<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="spaservice_2_0" resourceRoot="" soapui-version="4.6.2" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="SpaBinding" type="wsdl" bindingName="{http://soa.o2.co.uk/sdp/spaservice_2}SpaBinding" soapVersion="1_1" anonymous="optional" definition="file:/D:/Venki_backup/UK/Venki/Work/NorthBoundInterfaces/NorthBoundInterfaces-master_28Apr/NorthBoundInterfaces-master/NorthBoundInterfaces/NorthBoundInterfaces/spaservice_2_0.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/D:/Venki_backup/UK/Venki/Work/NorthBoundInterfaces/NorthBoundInterfaces-master_28Apr/NorthBoundInterfaces-master/NorthBoundInterfaces/NorthBoundInterfaces/spaservice_2_0.wsdl"><con:part><con:url>file:/D:/Venki_backup/UK/Venki/Work/NorthBoundInterfaces/NorthBoundInterfaces-master_28Apr/NorthBoundInterfaces-master/NorthBoundInterfaces/NorthBoundInterfaces/spaservice_2_0.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="SPA_2_0" targetNamespace="http://soa.o2.co.uk/sdp/spaservice_2" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:sad="http://soa.o2.co.uk/sdp/spadata_2" xmlns:sps="http://soa.o2.co.uk/sdp/spaservice_2">
  <wsdl:types>
    <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:import namespace="http://soa.o2.co.uk/sdp/spadata_2" schemaLocation="spadata_2_0.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="getServiceProviderDetails">
    <wsdl:part name="getServiceProviderDetails" element="sad:getServiceProviderDetails"/>
  </wsdl:message>
  <wsdl:message name="getServiceProviderDetailsResponse">
    <wsdl:part name="getServiceProviderDetailsResponse" element="sad:getServiceProviderDetailsResponse"/>
  </wsdl:message>
  <wsdl:message name="getServiceProviderDetailsFault">
    <wsdl:part name="getServiceProviderDetailsFault" element="sad:getServiceProviderDetailsFault"/>
  </wsdl:message>
  <wsdl:message name="getServiceProviderCategories">
    <wsdl:part name="getServiceProviderCategories" element="sad:getServiceProviderCategories"/>
  </wsdl:message>
  <wsdl:message name="getServiceProviderCategoriesResponse">
    <wsdl:part name="getServiceProviderCategoriesResponse" element="sad:getServiceProviderCategoriesResponse"/>
  </wsdl:message>
  <wsdl:message name="getServiceProviderCategoriesFault">
    <wsdl:part name="getServiceProviderCategoriesFault" element="sad:getServiceProviderCategoriesFault"/>
  </wsdl:message>
  <wsdl:portType name="SpaPort">
    <wsdl:operation name="getServiceProviderDetails">
      <wsdl:input name="getServiceProviderDetails" message="sps:getServiceProviderDetails"/>
      <wsdl:output name="getServiceProviderDetailsResponse" message="sps:getServiceProviderDetailsResponse"/>
      <wsdl:fault name="getServiceProviderDetailsFault" message="sps:getServiceProviderDetailsFault"/>
    </wsdl:operation>
    <wsdl:operation name="getServiceProviderCategories">
      <wsdl:input name="getServiceProviderCategories" message="sps:getServiceProviderCategories"/>
      <wsdl:output name="getServiceProviderCategoriesResponse" message="sps:getServiceProviderCategoriesResponse"/>
      <wsdl:fault name="getServiceProviderCategoriesFault" message="sps:getServiceProviderCategoriesFault"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="SpaBinding" type="sps:SpaPort">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getServiceProviderDetails">
      <soap:operation soapAction=""/>
      <wsdl:input name="getServiceProviderDetails">
        <soap:body parts="getServiceProviderDetails" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getServiceProviderDetailsResponse">
        <soap:body parts="getServiceProviderDetailsResponse" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="getServiceProviderDetailsFault">
        <soap:fault name="getServiceProviderDetailsFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getServiceProviderCategories">
      <soap:operation soapAction=""/>
      <wsdl:input name="getServiceProviderCategories">
        <soap:body parts="getServiceProviderCategories" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getServiceProviderCategoriesResponse">
        <soap:body parts="getServiceProviderCategoriesResponse" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="getServiceProviderCategoriesFault">
        <soap:fault name="getServiceProviderCategoriesFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SpaService">
    <wsdl:port name="SpaPort" binding="sps:SpaBinding">
      <soap:address location="https://sdpapi.o2.co.uk/services/sdp/Spa_2_0"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:\D:\Venki_backup\UK\Venki\Work\NorthBoundInterfaces\NorthBoundInterfaces-master_28Apr\NorthBoundInterfaces-master\NorthBoundInterfaces\NorthBoundInterfaces\spadata_2_0.xsd</con:url><con:content><![CDATA[<!--Date            	Change#       	Author            	Change Description-->
<!--03/03/2010  		1.0.1         		Subramanyam	Added optional elements applicationReference & subMerchant in request of 
																			getServiceProviderDetails &  getServiceProviderCategories-->
<!--24/06/2008  		1.0.0         		Manasa			Initial Version-->
<xsd:schema targetNamespace="http://soa.o2.co.uk/sdp/spadata_2" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xcore="http://soa.o2.co.uk/coredata_1" xmlns:sad="http://soa.o2.co.uk/sdp/spadata_2">
  <xsd:import namespace="http://soa.o2.co.uk/coredata_1" schemaLocation="coredata_1_1.xsd"/>
  <xsd:element name="getServiceProviderDetails" type="sad:getServiceProviderDetails">
    <xsd:annotation>
      <xsd:documentation>Request to get the service provider details</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="getServiceProviderDetails">
    <xsd:annotation>
      <xsd:documentation>Request to get the service provider details</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="msisdn" type="xcore:msisdnType"/>
      <xsd:element name="applicationReference" type="xsd:string" minOccurs="0"/>
      <xsd:element name="subMerchId" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getServiceProviderDetailsResponse" type="sad:getServiceProviderDetailsResponse">
    <xsd:annotation>
      <xsd:documentation>Service provider details Response</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="getServiceProviderDetailsResponse">
    <xsd:annotation>
      <xsd:documentation>Service provider details Response</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="code" type="xsd:string"/>
      <xsd:element name="description" type="xsd:string"/>
      <xsd:element name="paymentType" type="xsd:string"/>
      <xsd:element name="operatorID" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getServiceProviderDetailsFault" type="xcore:SOAFaultType">
    <xsd:annotation>
      <xsd:documentation>Service provider details Fault</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getServiceProviderCategories" type="sad:getServiceProviderCategories">
    <xsd:annotation>
      <xsd:documentation>Request to get the service provider categories details</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="getServiceProviderCategories">
    <xsd:annotation>
      <xsd:documentation>Request to get the service provider categories details</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="msisdn" type="xcore:msisdnType"/>
      <xsd:element name="applicationReference" type="xsd:string" minOccurs="0"/>
      <xsd:element name="subMerchId" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getServiceProviderCategoriesResponse" type="sad:getServiceProviderCategoriesResponse">
    <xsd:annotation>
      <xsd:documentation>Service provider categories Response</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="getServiceProviderCategoriesResponse">
    <xsd:annotation>
      <xsd:documentation>Service provider categories Response</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="code" type="xsd:string"/>
      <xsd:element name="description" type="xsd:string"/>
      <xsd:element name="spidDescription" type="xsd:string"/>
      <xsd:element name="spid" type="xsd:string"/>
      <xsd:element name="paymentType" type="xsd:string"/>
      <xsd:element name="barringCodes" type="xsd:string"/>
      <xsd:element name="category" type="xsd:string"/>
      <xsd:element name="status" type="xsd:string"/>
      <xsd:element name="operatorID" type="xsd:string"/>
      <xsd:element name="puk" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Personal Unblocking Key</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getServiceProviderCategoriesFault" type="xcore:SOAFaultType">
    <xsd:annotation>
      <xsd:documentation>Service provider categories Fault</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\D:\Venki_backup\UK\Venki\Work\NorthBoundInterfaces\NorthBoundInterfaces-master_28Apr\NorthBoundInterfaces-master\NorthBoundInterfaces\NorthBoundInterfaces\coredata_1_1.xsd</con:url><con:content><![CDATA[<!--Date            Version       Author				Change Description
	09/09/2011		1.1.3		  Raghu Ugare			Added addressType
	02/09/2011		1.1.2		  Raghu Ugare			Added cardTokenType	
	11/07/2011      1.1.1         Manasa Prasad         Added async element to support async services
	26/05/2011		1.1.0		  Raghu Ugare			Added identityUIDType and identityUsernameType & also updated the documentation for portalIDType
	11/03/2011		1.0.9		  Subramanyam			Added genderType	
	14/10/2010		1.0.8		  Prasanna SV			Added landlineNumberType
	11/08/2010		1.0.7		  Prasanna SV			Added ipAddressType
	19/05/2010		1.0.6		  Venkata Karhtik      	Added ssnType,userIdType
	03/05/2010		1.0.5		  Venkata Karhtik      	Added maskedCardNumberType,maskedBankAccountNumberType
	13/04/2010		1.0.4		  Shiby Varghese		Added spidType
	18/08/2009  	1.0.3         Karthikeyan R D       Added types for bank account number, sort code and account holder name.
	25/06/2009  	1.0.2         Venkata Karhtik      	Added types for credit/debit card related elements, customerTier,emailAddressType and postcode
	12/04/2008  	1.0.1         Kapil Gosian       	Initial version-->
<xsd:schema targetNamespace="http://soa.o2.co.uk/coredata_1" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xcore="http://soa.o2.co.uk/coredata_1">
  <xsd:complexType name="SOAFaultType">
    <xsd:annotation>
      <xsd:documentation>The type of the response sent to the calling
				application, if something goes wrong.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="xcore:SOAFaultOriginator"/>
      <xsd:element ref="xcore:SOAFaultCode"/>
      <xsd:element name="faultDescription" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>A human readable description of the error.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="faultTrace" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>A computer generated dump of the fault (may help
						in debugging problems).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ref="xcore:SOATransactionID" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="SOAFault" type="xcore:SOAFaultType">
    <xsd:annotation>
      <xsd:documentation>The response sent to the calling application, if
				something goes wrong.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="SOAFaultCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>A numeric representation of a fault (should be included
				in errors.xml).</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="SOAFaultOriginator" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>A representation of where a fault originates (should be
				included in errors.xml).</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="SOATransactionID" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>The transaction ID generated by the ESB.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="SOAConsumerTransactionID" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>A transaction ID supplied by the calling aplication. It
				will not be processed but is passed through and logged
				by all underlying services (aids in debugging problems).</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:simpleType name="msisdnType">
    <xsd:annotation>
      <xsd:documentation>Mobile Phone numbers (MSISDNs) should always be defined
				as strings, including country codes i.e. "447734123456";
				and translated into localised formats on the
				presentation and backend layers.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="billingAccountNumberType">
    <xsd:annotation>
      <xsd:documentation>A billing account, as it appears in the back end billing
				system (Companion).</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="6"/>
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="portalIDType">
    <xsd:annotation>
      <xsd:documentation>The portal account username (i.e., Portal ID). 
				A portal account is normally of the form “john.smith@o2.co.uk". 
				The Portal ID in this example is "john.smith" and the domain is "o2.co.uk".</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:complexType name="accountType">
    <xsd:annotation>
      <xsd:documentation>Data type to define a customers account. This could be
				either a portal account, msisdn, or a companion account
				and msisdn. Or a Bank Account program ID and account ID
				(initially for Timberlake)</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element name="portalID" type="xcore:portalIDType"/>
      <xsd:element name="msisdn" type="xcore:msisdnType">
        <xsd:annotation>
          <xsd:documentation>A msisdn, in international format i.e.,"447712345678"</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="accountDetail" type="xcore:accountDetail">
        <xsd:annotation>
          <xsd:documentation>Account Details</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="accountDetail">
    <xsd:annotation>
      <xsd:documentation>Account Details</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="billingAccountType">
        <xsd:annotation>
          <xsd:documentation>The type of account as it is defined in the
						billing system (only "MOBILE" currently
						defined).</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="MOBILE"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="accountNumber" type="xcore:billingAccountNumberType">
        <xsd:annotation>
          <xsd:documentation>The companion account.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="msisdn" type="xcore:msisdnType">
        <xsd:annotation>
          <xsd:documentation>The msisdn within the above account.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="customerIDType">
    <xsd:annotation>
      <xsd:documentation>Main customerID for online services - this is the o2BFid
				in CPDS at the moment</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:complexType name="cashCardAccountType">
    <xsd:annotation>
      <xsd:documentation>Uniquely identifies the account in the Prepaid Banking
				system that is being referred to.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:annotation>
        <xsd:documentation>Financial accounts need a programID and accountID
					(Ref: Timberlake)</xsd:documentation>
      </xsd:annotation>
      <xsd:element name="programID" type="xsd:long">
        <xsd:annotation>
          <xsd:documentation>Identifies program. Translates into "Smart" or
						"Freedom" with various limits</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="accountID" type="xsd:long">
        <xsd:annotation>
          <xsd:documentation>Unique internal account ID on the TSYS platform.
						Probably can be applied to other banking systems
						as well.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="userID" type="xsd:long" minOccurs="0"/>
      <xsd:element name="cardID" type="xsd:long" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="productIDType">
    <xsd:annotation>
      <xsd:documentation>Identifies a product - temporarily the same as o2BFID
				(and hence customer ID)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="customerRoleType">
    <xsd:annotation>
      <xsd:documentation>The role concept from registration DB or A and R</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="admin"/>
      <xsd:enumeration value="user"/>
      <xsd:enumeration value="chooser"/>
      <xsd:enumeration value="superuser"/>
      <xsd:enumeration value="unknown"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="imsiType">
    <xsd:annotation>
      <xsd:documentation>IMSI Number</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="imeiType">
    <xsd:annotation>
      <xsd:documentation>IMEI Number</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:element name="subscriberProfile" type="xcore:SubscriberProfileType">
    <xsd:annotation>
      <xsd:documentation>Subscriber Profile Element</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="SubscriberProfileType">
    <xsd:annotation>
      <xsd:documentation>Complex Type that defines Subscriber Profile</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="xcore:SubscriberID">
        <xsd:annotation>
          <xsd:documentation>This refers to the MSISDN for Mobile subscribers</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ref="xcore:Operator" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Operator ID for the particular subscriber</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ref="xcore:PaymentCategory" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Type of payment, Prepay of Postpay</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ref="xcore:Segment" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Segment of Subscriber, corporate, consumer, ISP
						etc.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="channel" type="xsd:string" minOccurs="0"/>
      <xsd:element name="ServiceProviderID" type="xsd:long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>SPID which is a unique value for the type of O2
						Service Provider like Tesco, CPW etc.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Status" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Operator" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>O2 UK, Tesco or Other normally</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Segment" type="xcore:SegmentType">
    <xsd:annotation>
      <xsd:documentation>The P and L definition of Consumer/SME/Corp</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:simpleType name="SegmentType">
    <xsd:annotation>
      <xsd:documentation>main ones listed - could be others</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Consumer"/>
      <xsd:enumeration value="SME"/>
      <xsd:enumeration value="Corporate"/>
      <xsd:enumeration value="ISP"/>
      <xsd:enumeration value="Unknown"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name="Channel" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>The sales channel that owns the subscriber</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="SubscriberID" type="xcore:msisdnType">
    <xsd:annotation>
      <xsd:documentation>Subscriber ID that is unique identifier of the
				subscriber eg: MSISDN no is subscriberID for Mobile
				users</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="PaymentCategory" type="xcore:PaymentCategoryType">
    <xsd:annotation>
      <xsd:documentation>Divides between pay and go/pay monthly</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:simpleType name="PaymentCategoryType">
    <xsd:annotation>
      <xsd:documentation>two values postpay or prepay</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Prepay"/>
      <xsd:enumeration value="Postpay"/>
      <xsd:enumeration value="Unknown"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="ServiceResultType">
    <xsd:annotation>
      <xsd:documentation>This data type represents the status recieved from a
				service for a task that might be earlier assigned to
				that service.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="statusCode" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>A unique code assigned to the status from the
						service. A set of status codes can be defined
						for services based on the context. A stausCode
						will be suffixed with "S" for success, "F" for
						failure and "E" for Error and "P" for Pending to
						describe the type of status recieved from
						service.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="externalDescription" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>A description of status in human-readble form
						that has to be sent to the end-user.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="internalDescription" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>This is an optional description of the status
						which is meant for logging purpose. This may
						contain the java stack trace or Database error
						trace based on the context.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MapItem">
    <xsd:annotation>
      <xsd:documentation>An individual Item that carries key-value pair for
				extensible properties</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="key" type="xsd:string"/>
      <xsd:choice>
        <xsd:annotation>
          <xsd:documentation>Only the relevant elemt is populated based on
						the type of the parameter.</xsd:documentation>
        </xsd:annotation>
        <xsd:element name="intValue" type="xsd:integer"/>
        <xsd:element name="strValue" type="xsd:string"/>
        <xsd:element name="boolValue" type="xsd:boolean"/>
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MapType">
    <xsd:annotation>
      <xsd:documentation>A generic extensible complex type that can be used to
				send multiple name-value pairs</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="mapItem" type="xcore:MapItem" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="StatusCodeType">
    <xsd:annotation>
      <xsd:documentation>This is borrowed from SPML definition of a status code -
				the pending status is a bit debatable</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="success"/>
      <xsd:enumeration value="failure"/>
      <xsd:enumeration value="error"/>
      <xsd:enumeration value="pending"/>
      <xsd:enumeration value="expired"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name="applicationID" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>applicationID is part of request identifier handled by
				SOA Access Gateway. Application ID uniquely identifies
				the name of consuming application. Example - DASHB, IVR,
				WAP, etc</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="providerID" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>providerID is also part of request identifier handled by
				SOA Access Gateway. Provider ID identifies the company
				that provides a functionality to end customers by
				invoking this specific service. Example - O2, Tesco, Car
				Phone Warehouse</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="originatorIP" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>This parameter indicates the IP address of the
				originating system. This parameter will be added by the
				SOA Access Gateway</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:simpleType name="mobileAccessIdType">
    <xsd:annotation>
      <xsd:documentation>Mobile Access Id is Hash id which is same as the UID
				generated by Wap Gateway</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:element name="debugFlag" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>This parameter indicates whether we should log or not,
				Used for debugging perspective from a Support
				Perspective.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:simpleType name="cardHolderNameType">
    <xsd:annotation>
      <xsd:documentation>The customer name on the Credit or Debit Card</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="cardIssueDateType">
    <xsd:annotation>
      <xsd:documentation>The date when the card was issued. In MM/YY format. It
				is important that the month comes first followed by the
				year.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="5"/>
      <xsd:pattern value="\d{2}/\d{2}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="cardExpiryDateType">
    <xsd:annotation>
      <xsd:documentation>The card expiry date. In MM/YY format. It is important
				that the month comes first followed by the year.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="5"/>
      <xsd:pattern value="\d{2}/\d{2}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="cardNumberType">
    <xsd:annotation>
      <xsd:documentation>The Credit/Debit Card Number(without spaces)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\d{12,20}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="cardCV2Type">
    <xsd:annotation>
      <xsd:documentation>The verification number printed on the back of the
				credit/debit card. The CardCV2 usually a 3 or 4 digit
				code on the back of card.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="5"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="cardIssueNumberType">
    <xsd:annotation>
      <xsd:documentation>The Credit or Debit Card Issue Number</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="2"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="cardIssuerType">
    <xsd:annotation>
      <xsd:documentation>The Bank Card Issuer</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MAESTRO"/>
      <xsd:enumeration value="SOLO"/>
      <xsd:enumeration value="VISA"/>
      <xsd:enumeration value="MASTERCARD"/>
      <xsd:enumeration value="DELTA"/>
      <xsd:enumeration value="AMEX"/>
      <xsd:enumeration value="ELECTRON"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="customerTierType">
    <xsd:annotation>
      <xsd:documentation>Customer friendly description for various segmentation
				keys. Allowed values are Platinum, Gold, Silver, Bronze,
				Blue, Unknown

				Segmentation Key Customer Tier value Platinum Platinum
				Gold Gold Silver Silver Bronze Bronze Select Gold none
				Blue Sel_Inv Silver Sel_Few Platinum</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Platinum"/>
      <xsd:enumeration value="Gold"/>
      <xsd:enumeration value="Silver"/>
      <xsd:enumeration value="Bronze"/>
      <xsd:enumeration value="Blue"/>
      <xsd:enumeration value="Unknown"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="emailAddressType">
    <xsd:annotation>
      <xsd:documentation>The email address</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="postcodeType">
    <xsd:annotation>
      <xsd:documentation>The Postcode.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--v1.0.3: Adding bank related information-->
  <xsd:simpleType name="bankAccountNumberType">
    <xsd:annotation>
      <xsd:documentation>The Bank Account number</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="bankSortCodeType">
    <xsd:annotation>
      <xsd:documentation>The Bank Sort code.(Ex:40-42-08)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="8"/>
      <xsd:maxLength value="8"/>
      <xsd:pattern value="\d{2}(-)\d{2}(-)\d{2}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="bankAccountHolderNameType">
    <xsd:annotation>
      <xsd:documentation>The Bank Account holder name.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--v1.0.3: Ends-->
  <xsd:simpleType name="spidType">
    <xsd:annotation>
      <xsd:documentation>The service provider identifier.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="maskedCardNumberType">
    <xsd:annotation>
      <xsd:documentation>The Credit/Debit Card Number(without spaces).This
				element is used to represent the masked data. Ex: If the
				card number value is 5683387298913746 and it needs to be
				represented as ************3746, then this data type is
				used.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="maskedBankAccountNumberType">
    <xsd:annotation>
      <xsd:documentation>This type should be used to render a masked
				representation of the bank account number. Ex: If the
				bank account number value is 5683387298913746 and it
				needs to be represented as ************3746, then this
				data type is used.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="ssnType">
    <xsd:annotation>
      <xsd:documentation>Sim Serial Number</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="userIdType">
    <xsd:annotation>
      <xsd:documentation>Unique customer identifier, an example would be the Id
				of a CSA who initiated an activity.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="30"/>
      <xsd:minLength value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ipAddressType">
    <xsd:annotation>
      <xsd:documentation>This can be an IPv4 address in dotted decimal format,
				(i.e. DDD.DDD.DDD.DDD, where D represents a digit). OR
				It can be an IPv6 address in hexadecimal format,
				(i.e. xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx, where x represents a hex value).</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="landlineNumberType">
    <xsd:annotation>
      <xsd:documentation>Landline number should always be defined as string, including
				country codes i.e. "442088702821"; and translated into
				localised format on the presentation and backend layers.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="genderType">
    <xsd:annotation>
      <xsd:documentation>Gender type</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="M"/>
      <xsd:enumeration value="F"/>
      <xsd:enumeration value="U"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="identityUIDType">
    <xsd:annotation>
      <xsd:documentation>The A&amp;R Unique ID. The UID remains static accross userName changes. 
				It is deleted if the Identity becomes merged into another Identity. 
				(A broadcast message will inform systems of this change.)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9A-Za-z]*"/>
      <xsd:maxLength value="40"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="identityUsernameType">
    <xsd:annotation>
      <xsd:documentation>The full A&amp;R username (eg., user@domain or user@o2.co.uk)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xcore:emailAddressType">
      <xsd:maxLength value="320"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name="async" type="xsd:boolean">
    <xsd:annotation>
      <xsd:documentation>This element indicates whether or not the operation supports an async mode of processing.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:simpleType name="cardTokenType">
    <xsd:annotation>
      <xsd:documentation>The standard token which corresponds to the details of a payment card.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="addressType">
    <xsd:annotation>
      <xsd:documentation>The standard address format in line with the latest PAF standards.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="addressKey" type="xcore:addressKeyType" minOccurs="0"/>
      <xsd:element name="organisationName" type="xcore:organisationNameType" minOccurs="0"/>
      <xsd:element name="departmentName" type="xcore:departmentNameType" minOccurs="0"/>
      <xsd:element name="subBuildingName" type="xcore:subBuildingNameType" minOccurs="0"/>
      <xsd:element name="buildingName" type="xcore:buildingNameType" minOccurs="0"/>
      <xsd:element name="buildingNumber" type="xcore:buildingNumberType" minOccurs="0"/>
      <xsd:element name="dependentThoroughfareNameAndDescriptor" type="xcore:thoroughfareNameAndDescriptorType" minOccurs="0"/>
      <xsd:element name="thoroughfareNameAndDescriptor" type="xcore:thoroughfareNameAndDescriptorType" minOccurs="0"/>
      <xsd:element name="doubleDependentLocality" type="xcore:dependentLocalityType" minOccurs="0"/>
      <xsd:element name="dependentLocality" type="xcore:dependentLocalityType" minOccurs="0"/>
      <xsd:element name="postTown" type="xcore:postTownType" minOccurs="0"/>
      <xsd:element name="county" type="xcore:countyType" minOccurs="0"/>
      <xsd:element name="postCode" type="xcore:postcodeType" minOccurs="0"/>
      <xsd:element name="poBoxNumber" type="xcore:poBoxNumberType" minOccurs="0"/>
      <xsd:element name="countryCode" type="xcore:countryCodeType" minOccurs="0"/>
      <xsd:element name="addressMetaData" type="xcore:addressMetaDataType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="addressKeyType">
    <xsd:annotation>
      <xsd:documentation>Type for storing address key information, which indicates whether the address has been validated.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="8"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="organisationNameType">
    <xsd:annotation>
      <xsd:documentation>Type for storing organisation name information.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="60"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="departmentNameType">
    <xsd:annotation>
      <xsd:documentation>Type for storing department name information.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="60"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="subBuildingNameType">
    <xsd:annotation>
      <xsd:documentation>Type for storing sub building information.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="30"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="buildingNameType">
    <xsd:annotation>
      <xsd:documentation>Type for storing building information.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="50"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="buildingNumberType">
    <xsd:annotation>
      <xsd:documentation>Type for storing building number information.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="4"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="thoroughfareNameAndDescriptorType">
    <xsd:annotation>
      <xsd:documentation>Type for storing thoroughfare name and descriptor information.
      		As per PAF standards, the max length for Thoroughfare name is 60 chars,
      		and the max length for Thoroughfare descriptor is 20 chars.
      		E.g.,in "Buckingham avenue", "Buckingham" is the thoroughfare-name and "avenue" is the descriptor.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="81"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="dependentLocalityType">
    <xsd:annotation>
      <xsd:documentation>Type for storing locality information.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="35"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="postTownType">
    <xsd:annotation>
      <xsd:documentation>Type for storing town or city name.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="30"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="countyType">
    <xsd:annotation>
      <xsd:documentation>Type for storing county information.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="30"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="poBoxNumberType">
    <xsd:annotation>
      <xsd:documentation>Type for storing PO Box number information.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="6"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="countryCodeType">
    <xsd:annotation>
      <xsd:documentation>Type for storing country-code information.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="3"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="addressMetaDataType">
    <xsd:annotation>
      <xsd:documentation>Type for storing any additional address meta-data.
      		This is useful to hold any additional address related fields like addressValidationStatus,etc., as key-value pairs.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="key" type="xsd:string"/>
      <xsd:element name="value" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:1113/services/sdp/Spa_2_0</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="getServiceProviderCategories" bindingOperationName="getServiceProviderCategories" type="Request-Response" outputName="getServiceProviderCategoriesResponse" inputName="getServiceProviderCategories" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:1113/services/sdp/Spa_2_0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:spad="http://soa.o2.co.uk/sdp/spadata_2">
   <soapenv:Header/>
   <soapenv:Body>
      <spad:getServiceProviderCategories>
         <spad:msisdn>?</spad:msisdn>
         <!--Optional:-->
         <spad:applicationReference>?</spad:applicationReference>
         <!--Optional:-->
         <spad:subMerchId>?</spad:subMerchId>
      </spad:getServiceProviderCategories>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://soa.o2.co.uk/sdp/spaservice_2/SpaPort/getServiceProviderCategories"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getServiceProviderDetails" bindingOperationName="getServiceProviderDetails" type="Request-Response" outputName="getServiceProviderDetailsResponse" inputName="getServiceProviderDetails" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:1113/services/sdp/Spa_2_0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:spad="http://soa.o2.co.uk/sdp/spadata_2">
   <soapenv:Header/>
   <soapenv:Body>
      <spad:getServiceProviderDetails>
         <spad:msisdn>?</spad:msisdn>
         <!--Optional:-->
         <spad:applicationReference>?</spad:applicationReference>
         <!--Optional:-->
         <spad:subMerchId>?</spad:subMerchId>
      </spad:getServiceProviderDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://soa.o2.co.uk/sdp/spaservice_2/SpaPort/getServiceProviderDetails"/></con:call></con:operation></con:interface><con:testSuite name="SpaBinding TestSuite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getServiceProviderCategories" searchProperties="true" id="bea8131f-5606-4ff6-b75d-cee1b8816965" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="delay" name="Delay_1"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="request" name="run1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SpaBinding</con:interface><con:operation>getServiceProviderCategories</con:operation><con:request name="run1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:1113/services/sdp/Spa_2_0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:spad="http://soa.o2.co.uk/sdp/spadata_2">
   <soapenv:Header/>
   <soapenv:Body>
      <spad:getServiceProviderCategories>
         <spad:msisdn>44</spad:msisdn>
      </spad:getServiceProviderCategories>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="delay" name="Delay_2"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="request" name="run2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SpaBinding</con:interface><con:operation>getServiceProviderCategories</con:operation><con:request name="run2"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:1113/services/sdp/Spa_2_0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:spad="http://soa.o2.co.uk/sdp/spadata_2">
   <soapenv:Header/>
   <soapenv:Body>
      <spad:getServiceProviderCategories>
         <spad:msisdn>?</spad:msisdn>
      </spad:getServiceProviderCategories>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="delay" name="Delay _3"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="request" name="run3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SpaBinding</con:interface><con:operation>getServiceProviderCategories</con:operation><con:request name="run3"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:1113/services/sdp/Spa_2_0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:spad="http://soa.o2.co.uk/sdp/spadata_2">
   <soapenv:Header/>
   <soapenv:Body>
      <spad:getServiceProviderCategories>
         <spad:msisdn>?</spad:msisdn>
      </spad:getServiceProviderCategories>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="delay" name="Delay_4"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="request" name="run4"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SpaBinding</con:interface><con:operation>getServiceProviderCategories</con:operation><con:request name="run4"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:1113/services/sdp/Spa_2_0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:spad="http://soa.o2.co.uk/sdp/spadata_2">
   <soapenv:Header/>
   <soapenv:Body>
      <spad:getServiceProviderCategories>
         <spad:msisdn>?</spad:msisdn>
      </spad:getServiceProviderCategories>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="delay" name="Delay_5"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="request" name="run5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SpaBinding</con:interface><con:operation>getServiceProviderCategories</con:operation><con:request name="run5"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:1113/services/sdp/Spa_2_0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:spad="http://soa.o2.co.uk/sdp/spadata_2">
   <soapenv:Header/>
   <soapenv:Body>
      <spad:getServiceProviderCategories>
         <spad:msisdn>?</spad:msisdn>
      </spad:getServiceProviderCategories>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties/><con:wssContainer/><con:sensitiveInformation/></con:soapui-project>
